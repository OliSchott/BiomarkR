## sclae Intensity for each cell type from 0 to 1 so that the control measuremtn is 1
mutate(Intensity = (Intensity - min(Intensity)) / (max(Intensity) - min(Intensity))) %>%
Y <- X %>% group_by(Cell.Type, Status) %>%
## calculate mean expression per status with CI
summarise(mean = mean(Intensity),
sd = sd(Intensity),
n = n(),
se = sd/sqrt(n))
X <- AgeData %>%
mutate(Gene = str_split_i(Protein, "_",2)) %>%
filter(Gene %in% DISCO_Marker_blood$Gene) %>%
merge(DISCO_Marker_blood, by = "Gene") %>%
filter(GestationalAge %in% c("very-pre-term", "pre-term"))  %>%
group_by(Cell.Type) %>%
## sclae Intensity for each cell type from 0 to 1 so that the control measuremtn is 1
mutate(Intensity = (Intensity - min(Intensity)) / (max(Intensity) - min(Intensity)))
Y <- X %>% group_by(Cell.Type, Status) %>%
## calculate mean expression per status with CI
summarise(mean = mean(Intensity),
sd = sd(Intensity),
n = n(),
se = sd/sqrt(n))
## plot y
ggplot2::ggplot(data = Y, aes(x = Cell.Type, y = mean, fill = Status)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9)) +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(text = element_text(size=15)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Expression of Blood cell markers in very-pre-term and pre-term groups") +
xlab("Cell Type") + ylab("Scaled Expression")
X <- AgeData %>%
mutate(Gene = str_split_i(Protein, "_",2)) %>%
filter(Gene %in% DISCO_Marker_blood$Gene) %>%
merge(DISCO_Marker_blood, by = "Gene") %>%
filter(GestationalAge %in% c("very-pre-term", "pre-term"))  %>%
group_by(Cell.Type)
Y <- X %>% group_by(Cell.Type, Status) %>%
## calculate mean expression per status with CI
summarise(mean = mean(Intensity),
sd = sd(Intensity),
n = n(),
se = sd/sqrt(n)) %>%
group_by(Cell.Type) %>%
## sclae Intensity for each cell type from 0 to 1 so that the control measuremtn is 1
mutate(mean = mean/mean[Status == "Control"])
## plot y
ggplot2::ggplot(data = Y, aes(x = Cell.Type, y = mean, fill = Status)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9)) +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(text = element_text(size=15)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Expression of Blood cell markers in very-pre-term and pre-term groups") +
xlab("Cell Type") + ylab("Scaled Expression")
X <- AgeData %>%
mutate(Gene = str_split_i(Protein, "_",2)) %>%
filter(Gene %in% DISCO_Marker_blood$Gene) %>%
merge(DISCO_Marker_blood, by = "Gene") %>%
filter(GestationalAge %in% c("very-pre-term", "pre-term"))
Y <- X %>% group_by(Cell.Type, Status) %>%
## calculate mean expression per status with CI
summarise(mean = mean(Intensity),
sd = sd(Intensity),
n = n(),
se = sd/sqrt(n)) %>%
group_by(Cell.Type) %>%
## sclae Intensity for each cell type from 0 to 1 so that the control measuremtn is 1
mutate(mean = mean/mean[Status == "Control"])
## plot y
ggplot2::ggplot(data = Y, aes(x = Cell.Type, y = mean, fill = Status)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9)) +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(text = element_text(size=15)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Expression of Blood cell markers in very-pre-term and pre-term groups") +
xlab("Cell Type") + ylab("Scaled Expression")
## read CSV
DISCO_Marker_blood <- read.csv(filepath, header = T, sep = ",", stringsAsFactors = F)
X <- AgeData %>%
mutate(Gene = str_split_i(Protein, "_",2)) %>%
filter(Gene %in% DISCO_Marker_blood$Gene) %>%
merge(DISCO_Marker_blood, by = "Gene") %>%
filter(GestationalAge %in% c("very-pre-term", "pre-term"))
Y <- X %>% group_by(Cell.Type, Status) %>%
## calculate mean expression per status with CI
summarise(mean = mean(Intensity),
sd = sd(Intensity),
n = n(),
se = sd/sqrt(n))
## plot y
ggplot2::ggplot(data = Y, aes(x = Cell.Type, y = mean, fill = Status)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin=mean-se, ymax=mean+se), width=.2, position=position_dodge(.9)) +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(text = element_text(size=15)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
ggtitle("Expression of Blood cell markers in very-pre-term and pre-term groups") +
xlab("Cell Type") + ylab("Scaled Expression")
## count number of unique proteins per cell type
X %>%
group_by(Cell.Type) %>%
summarise(n = n_distinct(Protein)) %>%
arrange(desc(n))
## count number of unique proteins per cell type
Z <- X %>%
group_by(Cell.Type) %>%
summarise(n = n_distinct(Protein)) %>%
arrange(desc(n))
View(Z)
BoxPlotData <- AgeData %>%
filter(Protein %in% c("P06737_PYGL", "P13010_XRCC5", "Q93008_USP9X")) %>%
filter(GestationalAge %in% c("very-pre-term", "pre-term"))
ggplot2::ggplot(data = BoxPlotData %>% filter(GestationalAge == "very-pre-term")) +
## use colors
facet_wrap(~Status) +
ggplot2::geom_boxplot(aes(x = Protein, y = Intensity, fill = Status)) +
## Add dots for each Protein/Status combination seperately
ggplot2::geom_point(data = BoxPlotData %>% filter(Status == "Control"), aes(x = Protein, y = Intensity), size = 3)+
## Add dots for each Protein/Status combination seperately
ggplot2::geom_point(data = BoxPlotData %>% filter(Status == "SIDS"), aes(x = Protein, y = Intensity), size = 3) +
## connects samples in control measuremtens with lines
geom_line(aes(group = Sample, x = Protein, y = Intensity),
data = BoxPlotData %>% filter(Status == "Control")) +
## connects samples in SIDS measuremtens with lines
geom_line(aes(group = Sample, x = Protein, y = Intensity),
data = BoxPlotData %>% filter(Status == "SIDS")) +
theme_minimal() +
## draw box around panels
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
## make fontsize bigger
theme(text = element_text(size=15)) +
# rotate x axis label by 90 degrees
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
## add title
ggtitle("Expression of Biomarkers in very-pre-term and pre-term groups")
View(AgeData)
PoIs <- unique(AgeData$Protein) %>% grepl("ITIH")
PoIs <- unique(AgeData$Protein)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(Protein, grepl("ITIH"))
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("ITIH",Protein))
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("ITIH",Protein)) %>%
distinct(Protein)
View(PoIs)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("ITIH",Protein)) %>%
distinct(Protein) %>% pull(POrotein)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("ITIH",Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity, fill = Status)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PlotData <- AgeData %>%
filter(Stauts == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
PlotData <- AgeData %>%
filter(Stauts == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
PlotData <- AgeData %>%
filter(Stauts == "Control") %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("APO",Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("S100",Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("IGL",Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("IGH",Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl("ITIH",Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl(c("FGA","FGB","FGG"),Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl(c("HMGB"),Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl(c("LTF"),Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
PoIs <- AgeData %>%
## filter for entries wiht "ITIH"
filter(grepl(c("CA"),Protein)) %>%
distinct(Protein) %>% pull(Protein)
colors <- assign_colors(unique(AgeData %>% arrange(Status) %>% pull(Status)))
PlotData <- AgeData %>%
filter(Status == "Control") %>%
mutate(Status = factor(Status)) %>%
mutate(GestationalAge = factor(GestationalAge)) %>%
filter(Protein %in% PoIs) %>%
mutate(Protein = factor(Protein, levels = PoIs)) %>%  # Ensure order
normalizeIntensityOnFeature()
Plot <- PlotData %>%  ggplot(aes(x = GestationalAge, y = Intensity)) +
geom_boxplot() +
facet_wrap(~Protein) +
## use colors
scale_fill_manual(values = colors) +
## Titles and axis labels
ggtitle("Expression of Proteins over gestational age") +
xlab("Gestational Age Group") + ylab("Scaled Intensity") +
theme_minimal() +
theme(panel.border = element_rect(colour = "black", fill = NA, size = 1)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
## make fontsize bigger
theme(text = element_text(size=15))
plot(Plot)
WTestResultList$`pre-term`$Vulcanoplot
roxygen2::roxygenise(r)
roxygen2::roxygenise(r"(C:\Users\CH254567\OneDrive\Working\Programs\BiomarkR)")
devtools::document()
roxygen2::roxygenise(r"(C:\Users\CH254567\OneDrive\Working\Programs\BiomarkR)")
warnings()
devtools::document()  # Rebuild Rd files from roxygen comments
devtools::install()   # Install it locally to test
devtools::document()
devtools::check()
pkgbuild::check_build_tools(debug = TRUE)
devtools::document()
devtools::check()
devtools::install()
devtools::document()     # Regenerate Rd files
devtools::document()     # Regenerate Rd files
devtools::install()      # Test locally
library(BiomarkR)
detach("package:BiomarkR", unload = TRUE)
devtools::document()
warnings()
roxygen2::roxygenise("C:\Users\CH254567\OneDrive\Working\Programs\BiomarkR")
roxygen2::roxygenise(r"(C:\Users\CH254567\OneDrive\Working\Programs\BiomarkR)")
warnings()
BiomarkR::BiomarkerPanel()
usethis::use_testthat()
